apiVersion: v1
data:
  COMPOSE_PROJECT_NAME: geonode
  # See https://github.com/containers/podman/issues/13889
  # DOCKER_BUILDKIT=0
  DOCKER_ENV: production
  # See https://github.com/geosolutions-it/geonode-generic/issues/28
  # to see why we force API version to 1.24
  DOCKER_API_VERSION: "1.24"
  BACKUPS_VOLUME_DRIVER: local
  
  C_FORCE_ROOT: "1"
  FORCE_REINIT: "false"
  INVOKE_LOG_STDOUT: "true"
  
  # LANGUAGE_CODE=pt
  # LANGUAGES=(('en-us','English'),('it-it','Italiano'))

  DJANGO_SETTINGS_MODULE: geonode.settings
  GEONODE_INSTANCE_NAME: geonode
  
  # #################
  # backend
  # #################
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  GEONODE_DATABASE: geonode
  GEONODE_DATABASE_PASSWORD: geonode
  GEONODE_GEODATABASE: geonode_data
  GEONODE_GEODATABASE_PASSWORD: geonode_data
  GEONODE_DATABASE_SCHEMA: public
  GEONODE_GEODATABASE_SCHEMA: public
  DATABASE_HOST: gndatabase
  DATABASE_PORT: "5432"
  DATABASE_URL: postgis://geonode:geonode@gndatabase:5432/geonode
  GEODATABASE_URL: postgis://geonode_data:geonode_data@gndatabase:5432/geonode_data
  GEONODE_DB_CONN_MAX_AGE: "0"
  GEONODE_DB_CONN_TOUT: "5"
  DEFAULT_BACKEND_DATASTORE: datastore
  BROKER_URL: amqp://guest:guest@rabbitmq:5672/
  CELERY_BEAT_SCHEDULER: celery.beat:PersistentScheduler
  ASYNC_SIGNALS: "True"
  
  SITEURL: https://KUBERNETES-SITE-URL/
  
  ALLOWED_HOSTS: '[''django'', ''*'']'
  
  # Data Uploader
  DEFAULT_BACKEND_UPLOADER: geonode.importer
  TIME_ENABLED: "True"
  MOSAIC_ENABLED: "False"
  HAYSTACK_SEARCH: "False"
  HAYSTACK_ENGINE_URL: http://elasticsearch:9200/
  HAYSTACK_SEARCH_RESULTS_PER_PAGE: "200"
  HAYSTACK_ENGINE_INDEX_NAME: haystack
  
  # #################
  # nginx
  # HTTPD Server
  # #################
  GEONODE_LB_HOST_IP: django
  GEONODE_LB_PORT: "8000"
  GEOSERVER_LB_HOST_IP: geoserver
  GEOSERVER_LB_PORT: "8080"
  NGINX_BASE_URL: KUBERNETES-SITE-URL

  # IP or domain name and port where the server can be reached on HTTPS# port where the server can be reached on HTTPS
  #HTTP_HOST:
  HTTPS_HOST: "KUBERNETES-SITE-URL"

  HTTP_PORT: "80"
  HTTPS_PORT: "443"

  # Let's Encrypt certificates for https encryption. You must have a do# with an ip) and it must be reachable from the outside. This can be
  # disabled : we do not get a certificate at all (a placeholder certif# staging : we get staging certificates (are invalid, but allow to te# production : we get a normal certificate (default)
  CLUSTER-ISSUER-NAME_MODE: disabled
  # CLUSTER-ISSUER-NAME_MODE=staging
  # CLUSTER-ISSUER-NAME_MODE=production
  
  RESOLVER: 10.96.0.10
  
  # #################
  # geoserver
  # #################
  GEOSERVER_WEB_UI_LOCATION: https://KUBERNETES-SITE-URL/geoserver/
  GEOSERVER_PUBLIC_LOCATION: https://KUBERNETES-SITE-URL/geoserver/
  GEOSERVER_LOCATION: http://gateway:8080/geoserver/
  GEOSERVER_ADMIN_USER: admin
  GEOSERVER_ADMIN_PASSWORD: geoserver
  
  OGC_REQUEST_TIMEOUT: "30"
  OGC_REQUEST_MAX_RETRIES: "1"
  OGC_REQUEST_BACKOFF_FACTOR: "0.3"
  OGC_REQUEST_POOL_MAXSIZE: "100000"
  OGC_REQUEST_POOL_CONNECTIONS: "10"

  # #################
  # catalogue
  # #################
  CATALOGUE_ENGINE: geonode.catalogue.backends.pycsw_local
  CATALOGUE_URL: https://KUBERNETES-SITE-URL/catalogue/csw

  # #################
  # redis_cache
  # #################
  REDIS_PASSWORD: "07110711"
  CACHE_REDIS_URL: redis://default:07110711@redis:6379/0
  CACHE_TIMEOUT: "86400"

  # #################
  # Security
  # #################
  # Admin Settings
  #
  # ADMIN_PASSWORD is used to overwrite the GeoNode admin password **ON# GeoNode is run. If you need to overwrite it again, you need to set
  # otherwise the invoke updateadmin task will be skipped and the curre# in DB will honored
  
  ADMIN_USERNAME: admin
  ADMIN_PASSWORD: admin
  ADMIN_EMAIL: kan@kan.com
  
  # Cookie expiration time
  SESSION_COOKIE_AGE: "86400"

  # EMAIL Notifications
  EMAIL_ENABLE: "False"
  DJANGO_EMAIL_BACKEND: django.core.mail.backends.smtp.EmailBackend
  DJANGO_EMAIL_HOST: localhost
  DJANGO_EMAIL_PORT: "25"
  DJANGO_EMAIL_HOST_USER: ""
  DJANGO_EMAIL_HOST_PASSWORD: ""
  DJANGO_EMAIL_USE_TLS: "False"
  DJANGO_EMAIL_USE_SSL: "False"
  DEFAULT_FROM_EMAIL: GeoNode <no-reply@geonode.org>
  
  # Session/Access Control
  LOCKDOWN_GEONODE: "False"
  CORS_ALLOW_ALL_ORIGINS: "True"
  X_FRAME_OPTIONS: SAMEORIGIN
  SESSION_EXPIRED_CONTROL_ENABLED: "True"
  DEFAULT_ANONYMOUS_VIEW_PERMISSION: "False"
  DEFAULT_ANONYMOUS_DOWNLOAD_PERMISSION: "False"
  
  # Users Registration
  ACCOUNT_OPEN_SIGNUP: "False"
  ACCOUNT_EMAIL_REQUIRED: "True"
  ACCOUNT_APPROVAL_REQUIRED: "False"
  ACCOUNT_CONFIRM_EMAIL_ON_GET: "False"
  ACCOUNT_EMAIL_VERIFICATION: none
  ACCOUNT_AUTHENTICATION_METHOD: username_email
  AUTO_ASSIGN_REGISTERED_MEMBERS_TO_REGISTERED_MEMBERS_GROUP_NAME: "True"
  
  # OAuth2
  OAUTH2_API_KEY: ""
  OAUTH2_CLIENT_ID: Jrchz2oPY3akmzndmgUTYrs9gczlgoV20YPSvqaV
  OAUTH2_CLIENT_SECRET: rCnp5txobUo83EpQEblM8fVj3QT5zb5qRfxNsuPzCqZaiRyIoxM4jdgMiZKFfePBHYXCLd7B8NlkfDBY9HKeIQPcy5Cp08KQNpRHQbjpLItDHv12GvkSeXp6OxaUETv3
  
  # GeoNode APIs
  API_LOCKDOWN: "False"
  TASTYPIE_APIKEY: ""
  
  # #################
  # Production and
  # Monitoring
  # #################
  DEBUG: "True"
  
  SECRET_KEY: myv-y4#7j-d*p-__@j#*3z@!y24fz8%^z2v6atuy4bo9vqr1_a
  
  # STATIC_ROOT: /mnt/volumes/statics/static/
  # MEDIA_ROOT: /mnt/volumes/statics/uploaded/
  # GEOIP_PATH: /mnt/volumes/statics/geoip.db
  
  CACHE_BUSTING_STATIC_ENABLED: "False"
  
  MEMCACHED_ENABLED: "False"
  MEMCACHED_BACKEND: django.core.cache.backends.memcached.MemcachedCache
  MEMCACHED_LOCATION: 127.0.0.1:11211
  MEMCACHED_LOCK_EXPIRE: "3600"
  MEMCACHED_LOCK_TIMEOUT: "10"

  #
  # Options for memcached binary, e.g. -vvv to log all requests and cache hits
  #
  MEMCACHED_OPTIONS: "-vvv"
  
  MAX_DOCUMENT_SIZE: "10000"
  CLIENT_RESULTS_LIMIT: "5"
  API_LIMIT_PER_PAGE: "1000"

  # GIS Client
  GEONODE_CLIENT_LAYER_PREVIEW_LIBRARY: mapstore
  MAPBOX_ACCESS_TOKEN: ""
  BING_API_KEY: ""
  GOOGLE_API_KEY: ""

  # Monitoring
  MONITORING_ENABLED: "True"
  MONITORING_DATA_TTL: "365"
  USER_ANALYTICS_ENABLED: "True"
  USER_ANALYTICS_GZIP: "True"
  CENTRALIZED_DASHBOARD_ENABLED: "False"
  MONITORING_SERVICE_NAME: local-geonode
  MONITORING_HOST_NAME: geonode

  # Other Options/Contribs
  MODIFY_TOPICCATEGORY: "True"
  AVATAR_GRAVATAR_SSL: "True"
  EXIF_ENABLED: "True"
  CREATE_LAYER: "True"
  FAVORITE_ENABLED: "True"
  
  # Advanced Workflow
  RESOURCE_PUBLISHING: "False"
  ADMIN_MODERATE_UPLOADS: "False"
  
  # PostgreSQL
  POSTGRESQL_MAX_CONNECTIONS: "200"

  # Common containers restart policy
  RESTART_POLICY_CONDITION: "on-failure"
  RESTART_POLICY_DELAY: "5s"
  RESTART_POLICY_MAX_ATTEMPTS: "3"
  RESTART_POLICY_WINDOW: 120s

  # Upload Size Limiting
  DEFAULT_MAX_UPLOAD_SIZE: "5368709120"
  DEFAULT_MAX_PARALLEL_UPLOADS_PER_USER: "100"
   
  #ACL Client
  ACL_HOST: https://KUBERNETES-SITE-URL/acl/api
  ACL_USERNAME: admin
  ACL_PASSWORD: s3cr3t

  ##########
  #Basemaps#
  ##########

  NUM_MAP_BASES: '4'

  # Argenmap
  MAP_BASE_1_CONFIG: "{\"type\": \"wms\", \"title\": \"Argenmap\", \"format\": \"image/jpeg\", \"id\": \"capabaseargenmap\", \"name\": \"capabaseargenmap\", \"url\": \"https://wms.ign.gob.ar/geoserver/wms\", \"group\": \"background\", \"thumbURL\": \"[SITEURL]static/mapstorestyle/img/argenmap.png\", \"visibility\": true}"
  # Open street
  MAP_BASE_2_CONFIG: "{\"type\": \"osm\", \"title\": \"Open Street Map\", \"name\": \"mapnik\", \"source\": \"osm\", \"group\": \"background\", \"visibility\": false}"
  # Open topo
  MAP_BASE_3_CONFIG: "{\"type\": \"tileprovider\", \"title\": \"OpenTopoMap\", \"provider\": \"OpenTopoMap\", \"name\": \"OpenTopoMap\", \"source\": \"OpenTopoMap\", \"group\": \"background\", \"visibility\": false}"
  # Sentinel
  MAP_BASE_4_CONFIG: "{\"type\": \"wms\", \"title\": \"Sentinel-2 cloudless - https://s2maps.eu\", \"format\": \"image/jpeg\", \"id\": \"s2cloudless\", \"name\": \"s2cloudless:s2cloudless\", \"url\": \"https://maps.geosolutionsgroup.com/geoserver/wms\", \"group\": \"background\", \"thumbURL\": \"[SITEURL]static/mapstorestyle/img/s2cloudless-s2cloudless.png\", \"visibility\": false}"

kind: ConfigMap
metadata:
  name: geonode--env
